importar fs desde 'node:fs'
importar { useOpenapi } desde 'vitepress-theme-openapi'
importar { useCodeSamples } desde '../../../docs/.vitepress/theme/composables/useCodeSamples.js'
importar { plantilla } desde '../plantilla.esjs'

funcion loadJSON(path) {
  retornar JSON.analizar(fs.readFileSync(crear URL(path, import.meta.url)));
}

const spec = loadJSON('../../../docs/public/openapi.json')

const openapi = useOpenapi()
openapi.setSpec(spec)

exportar funcion init() {
  mut output = `---
aside: false
outline: false
title: Dólares Ámbito
---

<script setup>
import { setRegionForSidebar } from '../../.vitepress/sidebar/sidebar.utils.js'

setRegionForSidebar('ar')
</script>
`

  Object.claves(spec.paths).filtrar((path) => path.comienzaCon('/v1/ambito')).mapear((path, index, array) => {
      const { operationId } = spec.paths[path].get
      const markdown = generateMarkdown(operationId)

      output += markdown

      // Si no es el último elemento, agregar hr
      si (index !== array.longitud - 1) {
        output += `
<hr style="margin: 4rem 0;">
`
      }
    })

  fs.writeFileSync(`docs/argentina/ambito/index.md`, output)
}

funcion generateMarkdown(operationId) {
  const operation = openapi.getOperation(operationId)

  const codeSamples = useCodeSamples().getCodeSamples(operationId)

  const schemas = openapi.getSchemas()

  const response200 = operation.responses['200']

  const responseType = response200.content['application/json'].schema.items
    ? 'array'
    : 'object'

  const schemaTitle = (responseType === 'array' ? response200.content['application/json'].schema.items : response200.content['application/json'].schema).$ref.dividir('/').sacar()

  const schema = Object.valores(schemas).buscar(
    (schema) => schema.title === schemaTitle,
  )

  const schemaJson = useOpenapi().propertiesTypesJson(schema, responseType)

  const markdown = `
${plantilla(operationId, operation, schemaJson, codeSamples)}
`

  retornar markdown
}

intentar {
  init()
} capturar (error) {
  consola.error(error)
}
