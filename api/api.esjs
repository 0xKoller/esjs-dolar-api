importar { Hono } desde 'hono'
importar { cors } desde 'hono/cors'
importar { timing } desde 'hono/timing'
importar { registro } desde '@/intermediarios/registro.intermediario.esjs'
importar { qstash } desde '@/intermediarios/qstash.intermediario.esjs'

exportar const app = crear Hono()

app.use('*', cors())

app.use('*', timing())

app.use('*', asincrono (c, siguiente) => {
  const respuesta = esperar siguiente()

  esperar registro(c, respuesta)

  retornar respuesta
})

app.use('/cron/*', qstash())

app.post('/cron/', asincrono (c) => {
  const token = import.meta.env.VITE_GITHUB_TOKEN

  const acciones = esperar (
    esperar fetch(
      'https://api.github.com/repos/enzonotario/esjs-dolar-api/actions/workflows',
      {
        method: 'GET',
        headers: {
          Accept: 'application/vnd.github+json',
          Authorization: `Bearer ${token}`,
          'X-GitHub-Api-Version': '2022-11-28',
        },
      },
    )
  ).json()

  const cron = acciones.workflows.buscar((w) => w.name === 'CRON')

  const ejecutar = esperar fetch(
    `https://api.github.com/repos/enzonotario/esjs-dolar-api/actions/workflows/${cron.id}/dispatches`,
    {
      method: 'POST',
      headers: {
        Accept: 'application/vnd.github+json',
        Authorization: `Bearer ${token}`,
        'X-GitHub-Api-Version': '2022-11-28',
        'Content-Type': 'text/plain',
      },
      body: JSON.aTexto({
        ref: 'main',
      }),
    },
  )

  retornar c.json({
    estado: 'Correcto',
  })
})

exportar porDefecto app
