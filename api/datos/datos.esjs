importar { drizzle } desde 'drizzle-orm/libsql'
importar { createClient } desde '@libsql/client'
importar { and, desc, eq } desde 'drizzle-orm'
importar * as schema desde './esquema.esjs'
importar { cotizaciones, dolares, extracciones } desde './esquema.esjs'

const client = createClient({
  url: importar.meta.env.VITE_DATABASE_URL,
  authToken: importar.meta.env.VITE_DATABASE_AUTH_TOKEN,
})

exportar const db = drizzle(client, { schema })

const DOLAR_CODIGO = 'USD'

exportar asincrono funcion obtenerDolarPorCasa(casa) {
  const resultado = esperar db
    .select()
    .desde(extracciones)
    .where(
      and(eq(extracciones.moneda, DOLAR_CODIGO), eq(extracciones.casa, casa)),
    )
    .orderBy(desc(extracciones.fecha))
    .limit(1)

  retornar resultado[0]
}

exportar asincrono funcion obtenerCotizacionPorMoneda(moneda) {
  const resultado = esperar db
    .select()
    .desde(extracciones)
    .where(
      and(eq(extracciones.moneda, moneda), eq(extracciones.casa, 'oficial')),
    )
    .orderBy(desc(extracciones.fecha))
    .limit(1)

  retornar resultado[0]
}

exportar asincrono funcion obtenerHistoricosPorCasa(casa) {
  retornar db
    .select()
    .desde(dolares)
    .where(and(eq(dolares.casa, casa)))
    .orderBy(desc(dolares.fecha))
}

exportar asincrono funcion guardarDolares(valores, fecha) {
  esperar db.eliminar(dolares).where(and(eq(dolares.fecha, fecha)))

  esperar db.insert(dolares).valores(
    valores.mapear((valor) => ({
      casa: valor.casa,
      compra: valor.compra,
      venta: valor.venta,
      fecha,
    })),
  )
}

exportar asincrono funcion guardarCotizaciones(valores, fecha) {
  esperar db.eliminar(cotizaciones).where(and(eq(cotizaciones.fecha, fecha)))

  esperar db.insert(cotizaciones).valores(
    valores.mapear((valor) => ({
      moneda: valor.moneda,
      compra: valor.compra,
      venta: valor.venta,
      fecha,
    })),
  )
}

exportar asincrono funcion guardarExtracciones(valores) {
  esperar db.insert(extracciones).valores(
    valores.mapear((valor) => ({
      moneda: valor.moneda,
      casa: valor.casa,
      compra: valor.compra,
      venta: valor.venta,
      fecha: valor.fechaActualizacion,
    })),
  )
}
