importar axios desde 'axios'
importar cheerio desde 'cheerio'
importar { monedas } desde '@/uy/constantes.uy.esjs'

exportar porDefecto asincrono funcion () {
  const respuesta = esperar obtenerRespuesta()

  retornar extraerCotizaciones(respuesta)
}

asincrono funcion obtenerRespuesta() {
  const buscarPortlet = esperar axios.get(
    'https://www.brou.com.uy/web/guest/cotizaciones',
    {
      headers: {
        'Content-Type': 'text/html; charset=utf-8',
      },
    },
  )

  const decodificado = decodeURIComponent(
    buscarPortlet.data.reemplazar(/\\x/g, '%'),
  )

  const portletPath = decodificado.coincidir(
    /\/c\/portal\/render_portlet\?p_l_id=\d+&p_p_id=cotizacion\w+&p_p_lifecycle=0&p_t_lifecycle=0/,
  )

  si (!portletPath) {
    consola.error('No se encontrÃ³ el portlet')
    retornar
  }

  const portletURL = `https://www.brou.com.uy${portletPath}`

  const respuesta = esperar axios.get(portletURL)

  retornar respuesta.data
}

funcion extraerCotizaciones(data) {
  const $ = cheerio.load(data)

  const cotizaciones = []

  $('tr').each((indice, elemento) => {
    const nombre = $(elemento).buscar('.moneda').text()
    const compra = $(elemento).buscar('.valor').eq(0).text()
    const venta = $(elemento).buscar('.valor').eq(1).text()

    cotizaciones.agregar({
      nombre: nombre,
      compra: interpretarValorMonetario(compra),
      venta: interpretarValorMonetario(venta),
      fechaActualizacion: interpretarFecha(crear Fecha()),
    })
  })

  retornar cotizaciones.filtrar((cotizacion) =>
      monedas.buscar((moneda) => moneda.nombre === cotizacion.nombre),
    ).mapear((cotizacion) => {
      const moneda = monedas.buscar(
        (moneda) => moneda.nombre === cotizacion.nombre,
      )

      retornar {
        moneda: moneda.codigo,
        nombre: moneda.nombre,
        compra: cotizacion.compra,
        venta: cotizacion.venta,
        fechaActualizacion: cotizacion.fechaActualizacion,
      }
    });
}

funcion interpretarValorMonetario(valor) {
  retornar interpretarDecimal(valor.reemplazar(',', '.'));
}

funcion interpretarFecha(fecha) {
  intentar {
    retornar crear Fecha(fecha);
  } capturar (error) {
    retornar fecha
  }
}
