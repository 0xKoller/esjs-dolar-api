importar express desde 'express'
importar httpDevServer desde 'vavite/http-dev-server'
importar cors desde 'cors'
importar { useTreblle } desde "treblle"
importar { v1 } desde '@/rutas/v1/v1.esjs'
importar { cron } desde '@/rutas/cron/cron.esjs'
importar estado desde '@/rutas/v1/estado.esjs'
importar docs desde '@/docs/inicio.esjs'
importar pino desde 'pino'
importar pinoHttp desde 'pino-http'
importar 'pino-loki'
importar { cache } desde '@/cache.middleware.esjs'

const modoDesarrollo = import.meta.env.MODE == 'development'

const app = express()

app.use(cors())

useTreblle(app, {
  apiKey: import.meta.env.VITE_TREBLLE_API_KEY,
  projectId: import.meta.env.VITE_TREBLLE_PROJECT_ID,
});

/**
 * Configuración de registro
 */
const logger = pinoHttp({
	transport: {
		target: 'pino-loki',
		options: {
			host: import.meta.env.VITE_LOKI_URL,
			basicAuth: {
				username: import.meta.env.VITE_LOKI_USER,
				password: import.meta.env.VITE_LOKI_PASSWORD,
			},
		},
	},
	enabled: !modoDesarrollo,
});

app.use(logger);

/**
 * Configuración de rutas
 */
app.use('/cron/', cron)
app.get('/estado', estado)
app.use('/v1/', v1)
app.get('/docs', cache(43800), docs)
app.get('/', cache(43800), (req, res) => {
	res.redirect('/docs')
})

/**
 * Iniciar servidor
 */
si (httpDevServer) {
	httpDevServer.on('request', app)
} sino {
	consola.escribir('Iniciando servidor de producción...')
	app.listen(3000)
}
